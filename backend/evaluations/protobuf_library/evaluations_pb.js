// source: evaluations.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.runtimePackage.AddEvaluationRequest', null, global);
goog.exportSymbol('proto.runtimePackage.AddEvaluationResponse', null, global);
goog.exportSymbol('proto.runtimePackage.Assertion', null, global);
goog.exportSymbol('proto.runtimePackage.AssertionMetadata', null, global);
goog.exportSymbol('proto.runtimePackage.Element', null, global);
goog.exportSymbol('proto.runtimePackage.Module', null, global);
goog.exportSymbol('proto.runtimePackage.Result', null, global);
goog.exportSymbol('proto.runtimePackage.SuccessCriteria', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.runtimePackage.Element = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.runtimePackage.Element, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.runtimePackage.Element.displayName = 'proto.runtimePackage.Element';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.runtimePackage.Result = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.runtimePackage.Result.repeatedFields_, null);
};
goog.inherits(proto.runtimePackage.Result, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.runtimePackage.Result.displayName = 'proto.runtimePackage.Result';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.runtimePackage.SuccessCriteria = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.runtimePackage.SuccessCriteria, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.runtimePackage.SuccessCriteria.displayName = 'proto.runtimePackage.SuccessCriteria';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.runtimePackage.AssertionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.runtimePackage.AssertionMetadata.repeatedFields_, null);
};
goog.inherits(proto.runtimePackage.AssertionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.runtimePackage.AssertionMetadata.displayName = 'proto.runtimePackage.AssertionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.runtimePackage.Assertion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.runtimePackage.Assertion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.runtimePackage.Assertion.displayName = 'proto.runtimePackage.Assertion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.runtimePackage.Module = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.runtimePackage.Module.repeatedFields_, null);
};
goog.inherits(proto.runtimePackage.Module, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.runtimePackage.Module.displayName = 'proto.runtimePackage.Module';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.runtimePackage.AddEvaluationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.runtimePackage.AddEvaluationRequest.repeatedFields_, null);
};
goog.inherits(proto.runtimePackage.AddEvaluationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.runtimePackage.AddEvaluationRequest.displayName = 'proto.runtimePackage.AddEvaluationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.runtimePackage.AddEvaluationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.runtimePackage.AddEvaluationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.runtimePackage.AddEvaluationResponse.displayName = 'proto.runtimePackage.AddEvaluationResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.runtimePackage.Element.prototype.toObject = function(opt_includeInstance) {
  return proto.runtimePackage.Element.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.runtimePackage.Element} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.Element.toObject = function(includeInstance, msg) {
  var f, obj = {
htmlCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
pointer: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.runtimePackage.Element}
 */
proto.runtimePackage.Element.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.runtimePackage.Element;
  return proto.runtimePackage.Element.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.runtimePackage.Element} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.runtimePackage.Element}
 */
proto.runtimePackage.Element.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHtmlCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.runtimePackage.Element.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.runtimePackage.Element.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.runtimePackage.Element} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.Element.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHtmlCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPointer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string html_code = 1;
 * @return {string}
 */
proto.runtimePackage.Element.prototype.getHtmlCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.Element} returns this
 */
proto.runtimePackage.Element.prototype.setHtmlCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pointer = 2;
 * @return {string}
 */
proto.runtimePackage.Element.prototype.getPointer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.Element} returns this
 */
proto.runtimePackage.Element.prototype.setPointer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.runtimePackage.Result.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.runtimePackage.Result.prototype.toObject = function(opt_includeInstance) {
  return proto.runtimePackage.Result.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.runtimePackage.Result} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.Result.toObject = function(includeInstance, msg) {
  var f, obj = {
verdict: jspb.Message.getFieldWithDefault(msg, 1, ""),
description: jspb.Message.getFieldWithDefault(msg, 2, ""),
elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.runtimePackage.Element.toObject, includeInstance),
elementsQuantity: jspb.Message.getFieldWithDefault(msg, 4, 0),
resultCode: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.runtimePackage.Result}
 */
proto.runtimePackage.Result.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.runtimePackage.Result;
  return proto.runtimePackage.Result.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.runtimePackage.Result} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.runtimePackage.Result}
 */
proto.runtimePackage.Result.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerdict(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.runtimePackage.Element;
      reader.readMessage(value,proto.runtimePackage.Element.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setElementsQuantity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.runtimePackage.Result.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.runtimePackage.Result.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.runtimePackage.Result} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.Result.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerdict();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.runtimePackage.Element.serializeBinaryToWriter
    );
  }
  f = message.getElementsQuantity();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getResultCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string verdict = 1;
 * @return {string}
 */
proto.runtimePackage.Result.prototype.getVerdict = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.Result} returns this
 */
proto.runtimePackage.Result.prototype.setVerdict = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.runtimePackage.Result.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.Result} returns this
 */
proto.runtimePackage.Result.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Element elements = 3;
 * @return {!Array<!proto.runtimePackage.Element>}
 */
proto.runtimePackage.Result.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.runtimePackage.Element>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.runtimePackage.Element, 3));
};


/**
 * @param {!Array<!proto.runtimePackage.Element>} value
 * @return {!proto.runtimePackage.Result} returns this
*/
proto.runtimePackage.Result.prototype.setElementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.runtimePackage.Element=} opt_value
 * @param {number=} opt_index
 * @return {!proto.runtimePackage.Element}
 */
proto.runtimePackage.Result.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.runtimePackage.Element, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.runtimePackage.Result} returns this
 */
proto.runtimePackage.Result.prototype.clearElementsList = function() {
  return this.setElementsList([]);
};


/**
 * optional int32 elements_quantity = 4;
 * @return {number}
 */
proto.runtimePackage.Result.prototype.getElementsQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Result} returns this
 */
proto.runtimePackage.Result.prototype.setElementsQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string result_code = 5;
 * @return {string}
 */
proto.runtimePackage.Result.prototype.getResultCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.Result} returns this
 */
proto.runtimePackage.Result.prototype.setResultCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.runtimePackage.SuccessCriteria.prototype.toObject = function(opt_includeInstance) {
  return proto.runtimePackage.SuccessCriteria.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.runtimePackage.SuccessCriteria} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.SuccessCriteria.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
level: jspb.Message.getFieldWithDefault(msg, 2, ""),
principle: jspb.Message.getFieldWithDefault(msg, 3, ""),
url: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.runtimePackage.SuccessCriteria}
 */
proto.runtimePackage.SuccessCriteria.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.runtimePackage.SuccessCriteria;
  return proto.runtimePackage.SuccessCriteria.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.runtimePackage.SuccessCriteria} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.runtimePackage.SuccessCriteria}
 */
proto.runtimePackage.SuccessCriteria.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrinciple(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.runtimePackage.SuccessCriteria.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.runtimePackage.SuccessCriteria.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.runtimePackage.SuccessCriteria} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.SuccessCriteria.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrinciple();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.runtimePackage.SuccessCriteria.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.SuccessCriteria} returns this
 */
proto.runtimePackage.SuccessCriteria.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string level = 2;
 * @return {string}
 */
proto.runtimePackage.SuccessCriteria.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.SuccessCriteria} returns this
 */
proto.runtimePackage.SuccessCriteria.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string principle = 3;
 * @return {string}
 */
proto.runtimePackage.SuccessCriteria.prototype.getPrinciple = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.SuccessCriteria} returns this
 */
proto.runtimePackage.SuccessCriteria.prototype.setPrinciple = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.runtimePackage.SuccessCriteria.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.SuccessCriteria} returns this
 */
proto.runtimePackage.SuccessCriteria.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.runtimePackage.AssertionMetadata.repeatedFields_ = [6,7,8,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.runtimePackage.AssertionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.runtimePackage.AssertionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.runtimePackage.AssertionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.AssertionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
code: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
url: jspb.Message.getFieldWithDefault(msg, 4, ""),
mapping: jspb.Message.getFieldWithDefault(msg, 5, ""),
targetElementsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
targetAttributesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
successCriteriaList: jspb.Message.toObjectList(msg.getSuccessCriteriaList(),
    proto.runtimePackage.SuccessCriteria.toObject, includeInstance),
successCriteriaQuantity: jspb.Message.getFieldWithDefault(msg, 9, 0),
resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.runtimePackage.Result.toObject, includeInstance),
resultsQuantity: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.runtimePackage.AssertionMetadata}
 */
proto.runtimePackage.AssertionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.runtimePackage.AssertionMetadata;
  return proto.runtimePackage.AssertionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.runtimePackage.AssertionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.runtimePackage.AssertionMetadata}
 */
proto.runtimePackage.AssertionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapping(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addTargetElements(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addTargetAttributes(value);
      break;
    case 8:
      var value = new proto.runtimePackage.SuccessCriteria;
      reader.readMessage(value,proto.runtimePackage.SuccessCriteria.deserializeBinaryFromReader);
      msg.addSuccessCriteria(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSuccessCriteriaQuantity(value);
      break;
    case 10:
      var value = new proto.runtimePackage.Result;
      reader.readMessage(value,proto.runtimePackage.Result.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResultsQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.runtimePackage.AssertionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.runtimePackage.AssertionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.runtimePackage.AssertionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.AssertionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMapping();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTargetElementsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getTargetAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getSuccessCriteriaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.runtimePackage.SuccessCriteria.serializeBinaryToWriter
    );
  }
  f = message.getSuccessCriteriaQuantity();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.runtimePackage.Result.serializeBinaryToWriter
    );
  }
  f = message.getResultsQuantity();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.runtimePackage.AssertionMetadata.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.runtimePackage.AssertionMetadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.runtimePackage.AssertionMetadata.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.runtimePackage.AssertionMetadata.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string mapping = 5;
 * @return {string}
 */
proto.runtimePackage.AssertionMetadata.prototype.getMapping = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setMapping = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string target_elements = 6;
 * @return {!Array<string>}
 */
proto.runtimePackage.AssertionMetadata.prototype.getTargetElementsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setTargetElementsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.addTargetElements = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.clearTargetElementsList = function() {
  return this.setTargetElementsList([]);
};


/**
 * repeated string target_attributes = 7;
 * @return {!Array<string>}
 */
proto.runtimePackage.AssertionMetadata.prototype.getTargetAttributesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setTargetAttributesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.addTargetAttributes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.clearTargetAttributesList = function() {
  return this.setTargetAttributesList([]);
};


/**
 * repeated SuccessCriteria success_criteria = 8;
 * @return {!Array<!proto.runtimePackage.SuccessCriteria>}
 */
proto.runtimePackage.AssertionMetadata.prototype.getSuccessCriteriaList = function() {
  return /** @type{!Array<!proto.runtimePackage.SuccessCriteria>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.runtimePackage.SuccessCriteria, 8));
};


/**
 * @param {!Array<!proto.runtimePackage.SuccessCriteria>} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
*/
proto.runtimePackage.AssertionMetadata.prototype.setSuccessCriteriaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.runtimePackage.SuccessCriteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.runtimePackage.SuccessCriteria}
 */
proto.runtimePackage.AssertionMetadata.prototype.addSuccessCriteria = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.runtimePackage.SuccessCriteria, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.clearSuccessCriteriaList = function() {
  return this.setSuccessCriteriaList([]);
};


/**
 * optional int32 success_criteria_quantity = 9;
 * @return {number}
 */
proto.runtimePackage.AssertionMetadata.prototype.getSuccessCriteriaQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setSuccessCriteriaQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated Result results = 10;
 * @return {!Array<!proto.runtimePackage.Result>}
 */
proto.runtimePackage.AssertionMetadata.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.runtimePackage.Result>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.runtimePackage.Result, 10));
};


/**
 * @param {!Array<!proto.runtimePackage.Result>} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
*/
proto.runtimePackage.AssertionMetadata.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.runtimePackage.Result=} opt_value
 * @param {number=} opt_index
 * @return {!proto.runtimePackage.Result}
 */
proto.runtimePackage.AssertionMetadata.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.runtimePackage.Result, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 results_quantity = 11;
 * @return {number}
 */
proto.runtimePackage.AssertionMetadata.prototype.getResultsQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AssertionMetadata} returns this
 */
proto.runtimePackage.AssertionMetadata.prototype.setResultsQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.runtimePackage.Assertion.prototype.toObject = function(opt_includeInstance) {
  return proto.runtimePackage.Assertion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.runtimePackage.Assertion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.Assertion.toObject = function(includeInstance, msg) {
  var f, obj = {
passed: jspb.Message.getFieldWithDefault(msg, 1, 0),
warning: jspb.Message.getFieldWithDefault(msg, 2, 0),
failed: jspb.Message.getFieldWithDefault(msg, 3, 0),
inapplicable: jspb.Message.getFieldWithDefault(msg, 4, 0),
outcome: jspb.Message.getFieldWithDefault(msg, 5, ""),
description: jspb.Message.getFieldWithDefault(msg, 6, ""),
metadata: (f = msg.getMetadata()) && proto.runtimePackage.AssertionMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.runtimePackage.Assertion}
 */
proto.runtimePackage.Assertion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.runtimePackage.Assertion;
  return proto.runtimePackage.Assertion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.runtimePackage.Assertion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.runtimePackage.Assertion}
 */
proto.runtimePackage.Assertion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPassed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWarning(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFailed(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInapplicable(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutcome(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = new proto.runtimePackage.AssertionMetadata;
      reader.readMessage(value,proto.runtimePackage.AssertionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.runtimePackage.Assertion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.runtimePackage.Assertion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.runtimePackage.Assertion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.Assertion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPassed();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWarning();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFailed();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getInapplicable();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOutcome();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.runtimePackage.AssertionMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 passed = 1;
 * @return {number}
 */
proto.runtimePackage.Assertion.prototype.getPassed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Assertion} returns this
 */
proto.runtimePackage.Assertion.prototype.setPassed = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 warning = 2;
 * @return {number}
 */
proto.runtimePackage.Assertion.prototype.getWarning = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Assertion} returns this
 */
proto.runtimePackage.Assertion.prototype.setWarning = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 failed = 3;
 * @return {number}
 */
proto.runtimePackage.Assertion.prototype.getFailed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Assertion} returns this
 */
proto.runtimePackage.Assertion.prototype.setFailed = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 inapplicable = 4;
 * @return {number}
 */
proto.runtimePackage.Assertion.prototype.getInapplicable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Assertion} returns this
 */
proto.runtimePackage.Assertion.prototype.setInapplicable = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string outcome = 5;
 * @return {string}
 */
proto.runtimePackage.Assertion.prototype.getOutcome = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.Assertion} returns this
 */
proto.runtimePackage.Assertion.prototype.setOutcome = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.runtimePackage.Assertion.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.Assertion} returns this
 */
proto.runtimePackage.Assertion.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional AssertionMetadata metadata = 7;
 * @return {?proto.runtimePackage.AssertionMetadata}
 */
proto.runtimePackage.Assertion.prototype.getMetadata = function() {
  return /** @type{?proto.runtimePackage.AssertionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.runtimePackage.AssertionMetadata, 7));
};


/**
 * @param {?proto.runtimePackage.AssertionMetadata|undefined} value
 * @return {!proto.runtimePackage.Assertion} returns this
*/
proto.runtimePackage.Assertion.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.runtimePackage.Assertion} returns this
 */
proto.runtimePackage.Assertion.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.runtimePackage.Assertion.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.runtimePackage.Module.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.runtimePackage.Module.prototype.toObject = function(opt_includeInstance) {
  return proto.runtimePackage.Module.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.runtimePackage.Module} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.Module.toObject = function(includeInstance, msg) {
  var f, obj = {
type: jspb.Message.getFieldWithDefault(msg, 1, ""),
passed: jspb.Message.getFieldWithDefault(msg, 2, 0),
warning: jspb.Message.getFieldWithDefault(msg, 3, 0),
failed: jspb.Message.getFieldWithDefault(msg, 4, 0),
inapplicable: jspb.Message.getFieldWithDefault(msg, 5, 0),
assertionsList: jspb.Message.toObjectList(msg.getAssertionsList(),
    proto.runtimePackage.Assertion.toObject, includeInstance),
assertionsQuantity: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.runtimePackage.Module}
 */
proto.runtimePackage.Module.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.runtimePackage.Module;
  return proto.runtimePackage.Module.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.runtimePackage.Module} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.runtimePackage.Module}
 */
proto.runtimePackage.Module.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPassed(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWarning(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFailed(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInapplicable(value);
      break;
    case 6:
      var value = new proto.runtimePackage.Assertion;
      reader.readMessage(value,proto.runtimePackage.Assertion.deserializeBinaryFromReader);
      msg.addAssertions(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAssertionsQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.runtimePackage.Module.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.runtimePackage.Module.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.runtimePackage.Module} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.Module.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassed();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWarning();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFailed();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getInapplicable();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAssertionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.runtimePackage.Assertion.serializeBinaryToWriter
    );
  }
  f = message.getAssertionsQuantity();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.runtimePackage.Module.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.Module} returns this
 */
proto.runtimePackage.Module.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 passed = 2;
 * @return {number}
 */
proto.runtimePackage.Module.prototype.getPassed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Module} returns this
 */
proto.runtimePackage.Module.prototype.setPassed = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 warning = 3;
 * @return {number}
 */
proto.runtimePackage.Module.prototype.getWarning = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Module} returns this
 */
proto.runtimePackage.Module.prototype.setWarning = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 failed = 4;
 * @return {number}
 */
proto.runtimePackage.Module.prototype.getFailed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Module} returns this
 */
proto.runtimePackage.Module.prototype.setFailed = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 inapplicable = 5;
 * @return {number}
 */
proto.runtimePackage.Module.prototype.getInapplicable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Module} returns this
 */
proto.runtimePackage.Module.prototype.setInapplicable = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated Assertion assertions = 6;
 * @return {!Array<!proto.runtimePackage.Assertion>}
 */
proto.runtimePackage.Module.prototype.getAssertionsList = function() {
  return /** @type{!Array<!proto.runtimePackage.Assertion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.runtimePackage.Assertion, 6));
};


/**
 * @param {!Array<!proto.runtimePackage.Assertion>} value
 * @return {!proto.runtimePackage.Module} returns this
*/
proto.runtimePackage.Module.prototype.setAssertionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.runtimePackage.Assertion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.runtimePackage.Assertion}
 */
proto.runtimePackage.Module.prototype.addAssertions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.runtimePackage.Assertion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.runtimePackage.Module} returns this
 */
proto.runtimePackage.Module.prototype.clearAssertionsList = function() {
  return this.setAssertionsList([]);
};


/**
 * optional int32 assertions_quantity = 7;
 * @return {number}
 */
proto.runtimePackage.Module.prototype.getAssertionsQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.Module} returns this
 */
proto.runtimePackage.Module.prototype.setAssertionsQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.runtimePackage.AddEvaluationRequest.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.runtimePackage.AddEvaluationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.runtimePackage.AddEvaluationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.AddEvaluationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
qualwebVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
inputUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
domainName: jspb.Message.getFieldWithDefault(msg, 3, ""),
domain: jspb.Message.getFieldWithDefault(msg, 4, ""),
uri: jspb.Message.getFieldWithDefault(msg, 5, ""),
completeUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
mobile: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
landscape: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
displayWidth: jspb.Message.getFieldWithDefault(msg, 9, 0),
displayHeight: jspb.Message.getFieldWithDefault(msg, 10, 0),
dom: jspb.Message.getFieldWithDefault(msg, 11, ""),
title: jspb.Message.getFieldWithDefault(msg, 12, ""),
elementCount: jspb.Message.getFieldWithDefault(msg, 13, 0),
passed: jspb.Message.getFieldWithDefault(msg, 14, 0),
warning: jspb.Message.getFieldWithDefault(msg, 15, 0),
failed: jspb.Message.getFieldWithDefault(msg, 16, 0),
inapplicable: jspb.Message.getFieldWithDefault(msg, 17, 0),
modulesList: jspb.Message.toObjectList(msg.getModulesList(),
    proto.runtimePackage.Module.toObject, includeInstance),
modulesQuantity: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.runtimePackage.AddEvaluationRequest}
 */
proto.runtimePackage.AddEvaluationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.runtimePackage.AddEvaluationRequest;
  return proto.runtimePackage.AddEvaluationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.runtimePackage.AddEvaluationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.runtimePackage.AddEvaluationRequest}
 */
proto.runtimePackage.AddEvaluationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQualwebVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomainName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompleteUrl(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMobile(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLandscape(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayWidth(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayHeight(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDom(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setElementCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPassed(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWarning(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFailed(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInapplicable(value);
      break;
    case 18:
      var value = new proto.runtimePackage.Module;
      reader.readMessage(value,proto.runtimePackage.Module.deserializeBinaryFromReader);
      msg.addModules(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModulesQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.runtimePackage.AddEvaluationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.runtimePackage.AddEvaluationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.AddEvaluationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQualwebVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInputUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomainName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCompleteUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMobile();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getLandscape();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDisplayWidth();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getDisplayHeight();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getDom();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getElementCount();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getPassed();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getWarning();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getFailed();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getInapplicable();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getModulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.runtimePackage.Module.serializeBinaryToWriter
    );
  }
  f = message.getModulesQuantity();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
};


/**
 * optional string qualweb_version = 1;
 * @return {string}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getQualwebVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setQualwebVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string input_url = 2;
 * @return {string}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getInputUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setInputUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string domain_name = 3;
 * @return {string}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getDomainName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setDomainName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string domain = 4;
 * @return {string}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string uri = 5;
 * @return {string}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string complete_url = 6;
 * @return {string}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getCompleteUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setCompleteUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool mobile = 7;
 * @return {boolean}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getMobile = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setMobile = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool landscape = 8;
 * @return {boolean}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getLandscape = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setLandscape = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int32 display_width = 9;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getDisplayWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setDisplayWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 display_height = 10;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getDisplayHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setDisplayHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string dom = 11;
 * @return {string}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getDom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setDom = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string title = 12;
 * @return {string}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int32 element_count = 13;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getElementCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setElementCount = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 passed = 14;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getPassed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setPassed = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 warning = 15;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getWarning = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setWarning = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 failed = 16;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getFailed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setFailed = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 inapplicable = 17;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getInapplicable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setInapplicable = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * repeated Module modules = 18;
 * @return {!Array<!proto.runtimePackage.Module>}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getModulesList = function() {
  return /** @type{!Array<!proto.runtimePackage.Module>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.runtimePackage.Module, 18));
};


/**
 * @param {!Array<!proto.runtimePackage.Module>} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
*/
proto.runtimePackage.AddEvaluationRequest.prototype.setModulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.runtimePackage.Module=} opt_value
 * @param {number=} opt_index
 * @return {!proto.runtimePackage.Module}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.addModules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.runtimePackage.Module, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.clearModulesList = function() {
  return this.setModulesList([]);
};


/**
 * optional int32 modules_quantity = 19;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationRequest.prototype.getModulesQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationRequest} returns this
 */
proto.runtimePackage.AddEvaluationRequest.prototype.setModulesQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.runtimePackage.AddEvaluationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.runtimePackage.AddEvaluationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.runtimePackage.AddEvaluationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.AddEvaluationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
statusCode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.runtimePackage.AddEvaluationResponse}
 */
proto.runtimePackage.AddEvaluationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.runtimePackage.AddEvaluationResponse;
  return proto.runtimePackage.AddEvaluationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.runtimePackage.AddEvaluationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.runtimePackage.AddEvaluationResponse}
 */
proto.runtimePackage.AddEvaluationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatusCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.runtimePackage.AddEvaluationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.runtimePackage.AddEvaluationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.runtimePackage.AddEvaluationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.runtimePackage.AddEvaluationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 status_code = 1;
 * @return {number}
 */
proto.runtimePackage.AddEvaluationResponse.prototype.getStatusCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.runtimePackage.AddEvaluationResponse} returns this
 */
proto.runtimePackage.AddEvaluationResponse.prototype.setStatusCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.runtimePackage);
